package com.java.Carrental.bal;

import java.sql.SQLException;

import com.java.Carrental.Exception.Uexception;
import com.java.Carrental.dao.CustomerImp;
import com.java.Carrental.model.Customer;

public class CustomerImpbal {
	public String addCustomerbal(Customer cus) throws Uexception, ClassNotFoundException, SQLException {
	    StringBuilder errors = new StringBuilder();
	    if (cus.getId() <= 0) {
	        errors.append("Customer ID must be greater than zero.");
	    }
	    if (cus.getName() == null || cus.getName().trim().isEmpty()) {
	        errors.append("Name cannot be null or empty.\n");
	    }
	    if (cus.getEmail() == null || !cus.getEmail().matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$")) {
	        errors.append("Invalid email format.");
	    }
	    if (cus.getPhone() == null || ((cus.getPhone().length()!=10))) {
	        errors.append("Phone must be a 10-digit number.");
	    }
	    if (errors.length() > 0) {
	        throw new Uexception(errors.toString());
	    }
	    return new CustomerImp().addCustomer(cus);
	}
	public String updateCustomer(Customer cus)
	{
		StringBuilder errors = new StringBuilder();
	    if (cus.getId() <= 0) {
	        errors.append("Customer ID must be greater than zero.");
	    }
	    if (cus.getName() == null || cus.getName().trim().isEmpty()) {
	        errors.append("Name cannot be null or empty.\n");
	    }
	    if (cus.getEmail() == null || !cus.getEmail().matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$")) {
	        errors.append("Invalid email format.");
	    }
	    if (cus.getPhone() == null || ((cus.getPhone().length()!=10))) {
	        errors.append("Phone must be a 10-digit number.");
	    }
	    if (errors.length() > 0) {
	        throw new Uexception(errors.toString());
	    }
	    return new CustomerImp().addCustomer(cus);
	}
}
