package com.java.Carrental.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.java.Carrental.model.Payment;
import com.java.Carrental.util.ConnectionHelper;

public class PaymentsaoImp implements Paymentdao{
	Connection con;
	@Override
	public void makePayment(Payment payment) throws ClassNotFoundException, SQLException {
		// TODO Auto-generated method stub
		String cmd="insert into PAYMENT(leaseId,paymentId,amount,paymentDate) values (?,?,?,?)";
		con=ConnectionHelper.getConnection();
		PreparedStatement psmt=con.prepareStatement(cmd);
		psmt.setInt(1,payment.getLeaseId());
		psmt.setInt(2, payment.getPaymentId());
		psmt.setDouble(3,payment.getAmount());
		psmt.setDate(4,Date.valueOf(payment.getDate()));
		psmt.executeQuery();
		con.commit();
	}

	@Override
	public List<Payment> getAllPayments() throws SQLException, ClassNotFoundException {
		String cmd="select * from PAYMENT";
		List<Payment> pay=new ArrayList<Payment>();
		con=ConnectionHelper.getConnection();
		PreparedStatement psmt=con.prepareStatement(cmd);
		ResultSet rs=psmt.executeQuery();
		while(rs.next())
		{
			Payment p=new Payment();
			p.setAmount(rs.getDouble("amount"));
			p.setDate(rs.getDate("paymentDate").toLocalDate());
			p.setLeaseId(rs.getInt("leaseId"));
			p.setPaymentId(rs.getInt("paymentId"));
			pay.add(p);
		}
		return pay;
	}

	@Override
	public List<Payment> getPaymentsByLeaseId(int leaseId) throws ClassNotFoundException, SQLException {
		String cmd="select * from PAYMENT where leaseId=?";
		List<Payment> pay=new ArrayList<Payment>();
		con=ConnectionHelper.getConnection();
		PreparedStatement psmt=con.prepareStatement(cmd);
		psmt.setInt(1, leaseId);
		ResultSet rs=psmt.executeQuery();
		while(rs.next())
		{
			Payment p=new Payment();
			p.setAmount(rs.getDouble("amount"));
			p.setDate(rs.getDate("paymentDate").toLocalDate());
			p.setLeaseId(rs.getInt("leaseId"));
			p.setPaymentId(rs.getInt("paymentId"));
			pay.add(p);
		}
		return pay;
	}

}
