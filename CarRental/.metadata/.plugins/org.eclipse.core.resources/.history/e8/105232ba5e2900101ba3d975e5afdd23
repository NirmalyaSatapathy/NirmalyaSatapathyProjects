package com.java.Carrental;
import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.java.Carrental.Exception.CustomerNotFoundException;
import com.java.Carrental.dao.CarImp;
import com.java.Carrental.dao.Cardao;
import com.java.Carrental.dao.CustomerDao;
import com.java.Carrental.dao.CustomerImp;
import com.java.Carrental.dao.LeaseImp;
import com.java.Carrental.dao.Leasedao;
import com.java.Carrental.model.Car;
import com.java.Carrental.model.Lease;


public class CarRentalSystemTest {

    private Cardao carDao;
    private CustomerDao customerDao;
    private Leasedao leaseDao;

    @BeforeEach
    public void setup() {
        carDao = new CarImp();
        customerDao = new CustomerImp();
        leaseDao = new LeaseImp();
    }

    @Test
    public void testCarCreatedSuccessfully() throws Exception {
//    	private int id;
//    	private String model;
//    	private String brand;
//    	private boolean availability;
//    	private double perDay;
//    	private double perMonth;
//    	private String engine;
        Car car = new Car();
        car.setAvailability(true);
        car.setBrand("fortuner");
        car.setEngine("124");
        car.setModel("Toyota");
        car.setPerDay(100);
        car.setPerMonth(200);
        carDao.addCar(car);
        assertTrue(car.getId() > 0);
        Car retrievedCar = carDao.findCarById(car.getId());
        assertEquals("Toyota", retrievedCar.getModel());
    }

    @Test
    public void testLeaseCreatedSuccessfully() throws Exception {
        Lease lease = new Lease();
        lease.setCarId(1);
        lease.setCustomerId(1);
        lease.setEndDate(LocalDate.of(2025, 05, 8));
        lease.setStartDate(LocalDate.of(2025, 05, 07));
        lease.setReturned(false);
        lease.setType("daily");
        leaseDao.createLease(lease);
        assertTrue(lease.getLeaseId() > 0);
    }

    @Test
    public void testLeaseRetrievedSuccessfully() throws Exception {
        Lease lease = leaseDao.getLeasebyId(1);
        assertNotNull(lease);
        assertEquals(1, lease.getLeaseId());
    }

    @Test
    public void testInvalidCustomerThrowsException() {
        assertThrows(CustomerNotFoundException.class, () -> {
            customerDao.getCustomerById(-1);
        });
    }

    @Test
    public void testInvalidCarThrowsException() {
        assertThrows(CarNotFoundException.class, () -> {
            carDao.findCarById(-1);
        });
    }

    @Test
    public void testInvalidLeaseThrowsException() {
        assertThrows(LeaseNotFoundException.class, () -> {
            leaseDao.getLeasebyId(-1);
        });
    }
}
